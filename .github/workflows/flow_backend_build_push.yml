name: Build & push backend container image

on:
  workflow_call:
    inputs:
      service-build-context-path:
        description: The path to the context to use when building the container image
        default: ./backend
        required: false
        type: string
      service-name:
        description: The name of the service to build
        required: true
        type: string
      push-image:
        description: Whether to push the container image to the registry
        default: false
        required: false
        type: boolean
      image-tags:
        description: The tags to pass to the "docker/metadata-action" action
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/metadata-action@v5
      name: Extract metadata (tags, labels) for Docker
      id: meta
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ inputs.service-name }}
        tags: ${{ inputs.image-tags }}
        flavor: latest=false

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      id: build_and_push
      with:
        push: ${{ inputs.push-image }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: "{{ defaultContext }}:${{ inputs.service-build-context-path }}"
        build-args: SERVICE_NAME=${{ inputs.service-name }}

    - name: Sign image with Cosign
      run: |
        images=""
        for tag in ${TAGS}; do
          images+="${tag}@${DIGEST} "
        done
        cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
      env:
        TAGS: ${{ steps.meta.outputs.tags }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        DIGEST: ${{ steps.build_and_push.outputs.digest }}
